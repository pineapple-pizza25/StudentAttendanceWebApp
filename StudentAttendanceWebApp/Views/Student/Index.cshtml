@model List<Student>

<div class="student-page">
    <!-- Sidebar -->
    <div class="sidebar">
        <h2>INNOV8</h2>
        <nav>
            <div class="sidebar-item">
                <a href="@Url.Action("Index", "StudentInformationPage")">
                    <i class="fas fa-chalkboard"></i> My Classes
                </a>
            </div>
            <div class="sidebar-item active">
                <a href="@Url.Action("Index", "Student")">
                    <i class="fas fa-users"></i> Students
                </a>
            </div>
            <div class="sidebar-item">
                <a href="@Url.Action("Index", "Settings")">
                    <i class="fas fa-cog"></i> Settings
                </a>
            </div>
        </nav>
        <div class="sidebar-item back-to-home">
            <button onclick="location.href='@Url.Action("Index", "Home")'" class="button">
                <i class="fas fa-home"></i> Back to Home
            </button>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="header">
            <div class="header-content">
                <h1><i class="fas fa-users"></i> Student Management</h1>
                <div class="header-actions">
                    <button onclick="location.href='@Url.Action("Create", "Student")'" class="create-button">
                        <i class="fas fa-plus"></i> Add New Student
                    </button>
                </div>
            </div>
        </div>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                @foreach (var modelState in ViewData.ModelState.Values)
                {
                    foreach (var error in modelState.Errors)
                    {
                        <div><i class="fas fa-exclamation-circle"></i> @error.ErrorMessage</div>
                    }
                }
            </div>
        }

        <!-- Search and Filter Section -->
        <div class="filters-section">
            <div class="search-box">
                <i class="fas fa-search search-icon"></i>
                <input type="text" id="studentSearch" placeholder="Search students..." oninput="filterStudents()">
            </div>
            <div class="filter-options">
                <select id="campusFilter" onchange="filterStudents()">
                    <option value="">All Campuses</option>
                    @{
                        var campuses = Model?.Select(s => s.CampusId).Distinct().OrderBy(c => c);
                        foreach (var campus in campuses ?? Enumerable.Empty<int>())
                        {
                            <option value="@campus">Campus @campus</option>
                        }
                    }
                </select>
                <select id="registrationFilter" onchange="filterStudents()">
                    <option value="">All Registrations</option>
                    <option value="complete">Complete</option>
                    <option value="incomplete">Incomplete</option>
                </select>
            </div>
        </div>

        <div class="student-list-container">
            <div class="table-responsive">
                <table class="student-table" id="studentTable">
                    <thead>
                        <tr>
                            <th onclick="sortTable(0)">Student ID <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable(1)">First Name <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable(2)">Last Name <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable(3)">Username <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable(4)">Phone Number</th>
                            <th onclick="sortTable(5)">Email</th>
                            <th onclick="sortTable(6)">Date of Birth</th>
                            <th onclick="sortTable(7)">Campus</th>
                            <th onclick="sortTable(8)">Registration</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var student in Model)
                            {
                                <tr>
                                    <td>@student.StudentId</td>
                                    <td>@student.FirstName</td>
                                    <td>@student.LastName</td>
                                    <td>@student.Username</td>
                                    <td>
                                        <a href="tel:@student.PhoneNumber" class="contact-link">
                                            <i class="fas fa-phone"></i> @student.PhoneNumber
                                        </a>
                                    </td>
                                    <td>
                                        <a href="mailto:@student.Email" class="contact-link">
                                            <i class="fas fa-envelope"></i> @student.Email
                                        </a>
                                    </td>
                                    <td>@student.DateOfBirth</td>
                                    <td>
                                        <span class="campus-badge">Campus @student.CampusId</span>
                                    </td>
                                    <td>
                                        <span class="registration-status @(student.RegistrationComplete ? "complete" : "incomplete")">
                                            @(student.RegistrationComplete ? "Complete" : "Incomplete")
                                        </span>
                                    </td>
                                    <td class="actions">
                                        <div class="action-buttons">
                                            <a href="@Url.Action("Edit", "Student", new { id = student.StudentId })" 
                                               class="action-button edit" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="@Url.Action("Details", "Student", new { id = student.StudentId })" 
                                               class="action-button details" title="Details">
                                                <i class="fas fa-info-circle"></i>
                                            </a>
                                            <a href="@Url.Action("Delete", "Student", new { id = student.StudentId })" 
                                               class="action-button delete" title="Delete"
                                               onclick="return confirm('Are you sure you want to delete this student?')">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="10" class="no-data">
                                    <div class="no-data-message">
                                        <i class="fas fa-users-slash"></i>
                                        <p>No students available.</p>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    /* Base Styles */
    :root {
        --primary-color: #4CAF50;
        --primary-dark: #45a049;
        --secondary-color: #2c3e50;
        --accent-color: #3498db;
        --danger-color: #e74c3c;
        --success-color: #2ecc71;
        --warning-color: #f1c40f;
        --text-color: #333;
        --light-gray: #f4f4f4;
        --border-color: #ddd;
    }

    body {
        margin: 0;
        padding: 0;
        background-color: var(--light-gray);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .container {
        max-width: none !important;
        padding: 0 !important;
        margin: 0 !important;
    }

    /* Layout */
    .student-page {
        display: flex;
        min-height: 100vh;
    }

    /* Sidebar Styles */
    .sidebar {
        width: 250px;
        background-color: var(--secondary-color);
        color: white;
        padding: 20px;
        position: fixed;
        height: 100vh;
        overflow-y: auto;
        transition: all 0.3s ease;
    }

    .sidebar h2 {
        margin: 0 0 30px 0;
        font-size: 24px;
        color: white;
        text-align: center;
        letter-spacing: 1px;
    }

    .sidebar-item {
        padding: 15px 20px;
        margin-bottom: 10px;
        font-size: 16px;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .sidebar-item a {
        text-decoration: none;
        color: white;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .sidebar-item:hover, .sidebar-item.active {
        background-color: rgba(255, 255, 255, 0.1);
        transform: translateX(5px);
    }

    .sidebar-item i {
        width: 20px;
        text-align: center;
    }

    /* Main Content */
    .main-content {
        flex: 1;
        margin-left: 250px;
        padding: 20px;
        background-color: var(--light-gray);
    }

    /* Header */
    .header {
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .header h1 {
        margin: 0;
        color: var(--text-color);
        display: flex;
        align-items: center;
        gap: 10px;
    }

    /* Search and Filters */
    .filters-section {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
        flex-wrap: wrap;
    }

    .search-box {
        flex: 1;
        position: relative;
        min-width: 200px;
    }

    .search-box input {
        width: 100%;
        padding: 12px 40px;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        font-size: 16px;
    }

    .search-icon {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #666;
    }

    .filter-options {
        display: flex;
        gap: 10px;
    }

    .filter-options select {
        padding: 12px;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        background-color: white;
        min-width: 150px;
    }

    /* Table Styles */
    .student-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        background-color: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .student-table th {
        background-color: var(--primary-color);
        color: white;
        padding: 15px;
        text-align: left;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .student-table th:hover {
        background-color: var(--primary-dark);
    }

    .student-table td {
        padding: 15px;
        border-bottom: 1px solid var(--border-color);
    }

    .student-table tbody tr:hover {
        background-color: rgba(76, 175, 80, 0.05);
    }

    /* Status Badges */
    .registration-status {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 14px;
        font-weight: 500;
    }

    .registration-status.complete {
        background-color: rgba(46, 204, 113, 0.2);
        color: var(--success-color);
    }

    .registration-status.incomplete {
        background-color: rgba(241, 196, 15, 0.2);
        color: var(--warning-color);
    }

    .campus-badge {
        background-color: var(--accent-color);
        color: white;
        padding: 6px 12px;
        border-radius: 30px;
        font-size: 14px;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 8px;
        justify-content: center;
    }

    .action-button {
        padding: 8px;
        border-radius: 6px;
        color: white;
        text-decoration: none;
        transition: transform 0.2s;
    }

    .action-button:hover {
        transform: scale(1.1);
    }

    .action-button.edit {
        background-color: var(--accent-color);
    }

    .action-button.details {
        background-color: var(--success-color);
    }

    .action-button.delete {
        background-color: var(--danger-color);
    }

    /* Create Button */
    .create-button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
    }

    .create-button:hover {
        background-color: var(--primary-dark);
        transform: translateY(-2px);
    }

    /* Alert Styles */
    .alert {
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

    .alert-danger {
        background-color: rgba(231, 76, 60, 0.1);
        color: var(--danger-color);
        border: 1px solid rgba(231, 76, 60, 0.2);
    }

    /* No Data Message */
    .no-data-message {
        text-align: center;
        padding: 40px;
        color: #666;
    }

    .no-data-message i {
        font-size: 48px;
        margin-bottom: 10px;
        color: #999;
    }

    /* Responsive Design */
    @@media (max-width: 1024px) {
        .sidebar {
            width: 200px;
        }